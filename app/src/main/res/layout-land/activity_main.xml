<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/mainLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appbar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        app:layout_constraintTop_toTopOf="parent">

        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:background="?attr/colorPrimary"
            app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />

    </com.google.android.material.appbar.AppBarLayout>

    <!--
     - android:gravity="center" + android:gravity="center" uses all of the available height and centers it horizontally
       - This avoids subtle cutting off of the buttom edge of the last button
    -->
    <LinearLayout
        android:id="@+id/instrument_buttons"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:gravity="center"
        android:orientation="horizontal"
        app:layout_constraintBottom_toTopOf="@id/note_buttons"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/appbar">

        <include layout="@layout/instrument_buttons" />
    </LinearLayout>

    <!--
    - android:layout_height="0dp" uses all of the available height, adn the items are automatically vertically centred
    - android:layout_width="0dp" uses all of the available width, combined with android:gravity="center" (below) to center each item vertically
      - Otherwise, the height would be set to the height of the content of the first view flipper and the other items would float to the top
    -->
    <ViewFlipper
        android:id="@+id/note_buttons"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:visibility="invisible"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/instrument_buttons">

        <LinearLayout
            android:id="@+id/note_buttons_guitar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:gravity="center"
            android:orientation="horizontal">

            <include layout="@layout/note_buttons_guitar" />
        </LinearLayout>

        <LinearLayout
            android:id="@+id/note_buttons_ukulele"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:gravity="center"
            android:orientation="horizontal">

            <include layout="@layout/note_buttons_ukulele" />
        </LinearLayout>

        <LinearLayout
            android:id="@+id/note_buttons_mandolin"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:gravity="center"
            android:orientation="horizontal">

            <include layout="@layout/note_buttons_mandolin" />
        </LinearLayout>

        <LinearLayout
            android:id="@+id/note_buttons_banjo"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:gravity="center"
            android:orientation="horizontal">

            <include layout="@layout/note_buttons_banjo" />
        </LinearLayout>
    </ViewFlipper>

</androidx.constraintlayout.widget.ConstraintLayout>